// author: @Jan-Piotraschke
// date: 2023-07-06
// license: Apache License 2.0
// version: 0.1.0

#include <gtest/gtest.h>
#include <vector>
#include <Eigen/Dense>

#include <particle_simulation/forces.h>


class ForcesTest : public ::testing::Test {
protected:
    const double k = 10;
    const double σ = 1.4166666666666667;
    const double r_adh = 1;
    const double k_adh = 0.75;
};

TEST_F(ForcesTest, Test1) {
    Eigen::MatrixXd dist_x(10, 10);
    dist_x << 0,    -0.123451,     0.025514,    -0.086143,     -0.01464,   -0.0383697,  0.000449657,    -0.623163,     0.043547,    -0.143205,
    0.123451,            0,     0.148965,     0.037308,     0.108811,    0.0850813,     0.123901,    -0.499712,     0.166998,    -0.019754,
   -0.025514,    -0.148965,            0,    -0.111657,    -0.040154,   -0.0638836,   -0.0250643,    -0.648677,     0.018033,    -0.168719,
    0.086143,    -0.037308,     0.111657,            0,     0.071503,    0.0477734,    0.0865927,     -0.53702,      0.12969,    -0.057062,
     0.01464,    -0.108811,     0.040154,    -0.071503,            0,   -0.0237297,    0.0150897,    -0.608523,     0.058187,    -0.128565,
   0.0383697,   -0.0850813,    0.0638836,   -0.0477734,    0.0237297,            0,    0.0388193,    -0.584793,    0.0819167,    -0.104835,
-0.000449657,    -0.123901,    0.0250643,   -0.0865927,   -0.0150897,   -0.0388193,            0,    -0.623613,    0.0430973,    -0.143655,
    0.623163,     0.499712,     0.648677,      0.53702,     0.608523,     0.584793,     0.623613,            0,      0.66671,     0.479958,
   -0.043547,    -0.166998,    -0.018033,     -0.12969,    -0.058187,   -0.0819167,   -0.0430973,     -0.66671,            0,    -0.186752,
    0.143205,     0.019754,     0.168719,     0.057062,     0.128565,     0.104835,     0.143655,    -0.479958,     0.186752,            0;

    Eigen::MatrixXd dist_y(10, 10);
    dist_y << 0,   -0.229863,   -0.177859,   -0.177727,   -0.290849,   -0.209625,   -0.154058,   -0.491547,   -0.224224,   -0.252539,
        0.229863,           0,   0.0520037,   0.0521363,  -0.0609857,   0.0202383,   0.0758053,   -0.261684,  0.00563865,  -0.0226757,
        0.177859,  -0.0520037,           0,  0.00013267,   -0.112989,  -0.0317653,   0.0238017,   -0.313688,   -0.046365,  -0.0746793,
        0.177727,  -0.0521363, -0.00013267,           0,   -0.113122,   -0.031898,    0.023669,   -0.313821,  -0.0464977,   -0.074812,
        0.290849,   0.0609857,    0.112989,    0.113122,           0,    0.081224,    0.136791,   -0.200699,   0.0666243,     0.03831,
        0.209625,  -0.0202383,   0.0317653,    0.031898,   -0.081224,           0,    0.055567,   -0.281923,  -0.0145997,   -0.042914,
        0.154058,  -0.0758053,  -0.0238017,   -0.023669,   -0.136791,   -0.055567,           0,    -0.33749,  -0.0701667,   -0.098481,
        0.491547,    0.261684,    0.313688,    0.313821,    0.200699,    0.281923,     0.33749,           0,    0.267323,    0.239009,
        0.224224, -0.00563865,    0.046365,   0.0464977,  -0.0666243,   0.0145997,   0.0701667,   -0.267323,           0,  -0.0283143,
        0.252539,   0.0226757,   0.0746793,    0.074812,    -0.03831,    0.042914,    0.098481,   -0.239009,   0.0283143,           0;

    std::vector<Eigen::MatrixXd> dist_vect;
    dist_vect.push_back(dist_x);
    dist_vect.push_back(dist_y);

    Eigen::MatrixXd dist_length(10,10);
    dist_length << 0,  9.97271,  7.97793,  8.25324,  11.1856,  11.6679,  8.30672,  16.1402,  8.72409,  10.3384,
            9.97271,        0,  8.24629,  2.57632,  6.16438,  4.45401,  7.78484,  9.96898,  8.16536, 0.564615,
            7.97793,  8.24629,        0,   8.5637,  4.22301,   3.8975,   2.8798,  13.9915,  2.43831,   8.3199,
            8.25324,  2.57632,   8.5637,        0,  7.78326,  4.69306,  7.10795,  12.6353,  9.24352,  3.17539,
            11.1856,  6.16438,  4.22301,  7.78326,        0,  3.98087,  6.27616,  9.61481,  2.45434,  5.91504,
            11.6679,  4.45401,   3.8975,  4.69306,  3.98087,        0,  3.53259,  12.3206,  4.66219,  4.65275,
            8.30672,  7.78484,   2.8798,  7.10795,  6.27616,  3.53259,        0,    15.72,  5.24788,  8.09404,
            16.1402,  9.96898,  13.9915,  12.6353,  9.61481,  12.3206,    15.72,        0,   11.796,  9.32882,
            8.72409,  8.16536,  2.43831,  9.24352,  2.45434,  4.66219,  5.24788,   11.796,        0,  8.03602,
            10.3384, 0.564615,   8.3199,  3.17539,  5.91504,  4.65275,  8.09404,  9.32882,  8.03602,        0;

    Eigen::Matrix<double, 10, 2> expected_result;
    expected_result <<   0,          0,
                0.267011,   0.303225,
                -0.0103111,   0.026511,
                0.0131359,  0.0183569,
                -0.0317121, -0.0363105,
                        0,          0,
                        0,          0,
                        0,          0,
                0.0420232, 0.00979946,
                -0.280147,  -0.321582;

    Eigen::MatrixXd F_track = calculate_forces_between_particles(dist_vect, dist_length, k, σ, r_adh, k_adh);

    double tolerance = 1e-5;
    ASSERT_TRUE(expected_result.isApprox(F_track, tolerance));
}
